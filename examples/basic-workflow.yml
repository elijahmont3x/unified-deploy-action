name: Deploy with UDS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }},ghcr.io/${{ github.repository }}:latest
      
      - name: Setup environment
        if: github.event_name != 'pull_request'
        uses: elijahmont3x/unified-deploy-action@master
        with:
          command: setup
          app-name: ${{ github.event.repository.name }}
          domain: ${{ secrets.DOMAIN_NAME }}
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      
      - name: Deploy application
        if: github.event_name != 'pull_request'
        uses: elijahmont3x/unified-deploy-action@master
        with:
          command: deploy
          app-name: ${{ github.event.repository.name }}
          image: ghcr.io/${{ github.repository }}
          tag: ${{ github.sha }}
          domain: ${{ secrets.DOMAIN_NAME }}
          route-type: path
          route: ${{ github.event.repository.name }}
          port: 3000
          ssl: true
          ssl-email: ${{ secrets.SSL_EMAIL }}
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          env-vars: >
            {
              "NODE_ENV": "production",
              "PORT": "3000",
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
              "API_KEY": "${{ secrets.API_KEY }}"
            }