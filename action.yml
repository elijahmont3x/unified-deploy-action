name: 'Unified Deployment System'
description: 'A comprehensive deployment system with SSL, dynamic routing, and plugin support'
author: 'UDS Team'
branding:
  icon: 'cloud'
  color: 'blue'

inputs:
  command:
    description: 'Command to run (deploy, setup, cleanup)'
    required: true
    default: 'deploy'
  app-name:
    description: 'Application name'
    required: true
  image:
    description: 'Docker image name (can be a comma-separated list for multiple services)'
    required: false
  tag:
    description: 'Docker image tag'
    required: false
    default: 'latest'
  domain:
    description: 'Domain name for deployment'
    required: true
  route-type:
    description: 'Type of route (path or subdomain)'
    required: false
    default: 'path'
  route:
    description: 'Route path or subdomain prefix'
    required: false
  port:
    description: 'Internal container port to expose'
    required: false
    default: '3000'
  ssl:
    description: 'Enable SSL'
    required: false
    default: 'true'
  ssl-email:
    description: 'Email for SSL certificate registration'
    required: false
  ssl-wildcard:
    description: 'Enable wildcard SSL certificate'
    required: false
    default: 'false'
  ssl-dns-provider:
    description: 'DNS provider for SSL DNS challenge'
    required: false
  ssl-dns-credentials:
    description: 'Credentials for DNS provider (JSON string)'
    required: false
  volumes:
    description: 'Volume mappings (comma-separated list of source:target)'
    required: false
  env-vars:
    description: 'Environment variables (JSON string)'
    required: false
  persistent:
    description: 'Mark services as persistent (not updated during deployments)'
    required: false
    default: 'false'
  compose-file:
    description: 'Path to custom docker-compose.yml file'
    required: false
  use-profiles:
    description: 'Use Docker Compose profiles'
    required: false
    default: 'true'
  extra-hosts:
    description: 'Extra hosts to add to containers (comma-separated list of host:ip)'
    required: false
  health-check:
    description: 'Health check endpoint'
    required: false
    default: '/health'
  health-check-type:
    description: 'Health check type (http, tcp, container, command)'
    required: false
    default: 'auto'
  health-check-timeout:
    description: 'Timeout in seconds for health check'
    required: false
    default: '60'
  health-check-command:
    description: 'Custom command for health check when using command type'
    required: false
  multi-stage:
    description: 'Enable multi-stage deployment with validation'
    required: false
    default: 'false'
  check-dependencies:
    description: 'Check if required dependencies are satisfied'
    required: false
    default: 'false'
  port-auto-assign:
    description: 'Automatically assign ports if the specified port is in use'
    required: false
    default: 'true'
  version-tracking:
    description: 'Enable version tracking'
    required: false
    default: 'true'
  secure-mode:
    description: 'Enable enhanced security features'
    required: false
    default: 'false'
  check-system:
    description: 'Perform system checks before setup'
    required: false
    default: 'false'
  install-deps:
    description: 'Install system dependencies during setup'
    required: false
    default: 'false'
  pg-migration-enabled:
    description: 'Enable PostgreSQL migrations'
    required: false
    default: 'false'
  pg-connection-string:
    description: 'PostgreSQL connection string'
    required: false
  pg-backup-enabled:
    description: 'Enable PostgreSQL backups before migrations'
    required: false
    default: 'true'
  pg-migration-script:
    description: 'Custom PostgreSQL migration script'
    required: false
  telegram-enabled:
    description: 'Enable Telegram notifications'
    required: false
    default: 'false'
  telegram-bot-token:
    description: 'Telegram bot token'
    required: false
    sensitive: true
  telegram-chat-id:
    description: 'Telegram chat ID'
    required: false
  telegram-notify-level:
    description: 'Minimum level for Telegram notifications (debug, info, warning, error)'
    required: false
    default: 'info'
  telegram-include-logs:
    description: 'Include logs in Telegram notifications'
    required: false
    default: 'true'
  max-log-lines:
    description: 'Maximum number of log lines to collect on error'
    required: false
    default: '50'
  working-dir:
    description: 'Working directory on the remote server'
    required: false
    default: '/opt/uds'
  host:
    description: 'Remote host'
    required: true
  username:
    description: 'Remote username'
    required: true
  ssh-key:
    description: 'SSH private key'
    required: true
    sensitive: true
  plugins:
    description: 'Comma-separated list of plugins to enable'
    required: false
  auto-rollback:
    description: 'Enable automatic rollback on deployment failure'
    required: false
    default: 'true'
  cleanup-images:
    description: 'Clean up unused Docker images during cleanup'
    required: false
    default: 'false'
  cleanup-images-age:
    description: 'Age threshold for image cleanup (e.g., 168h for 1 week)'
    required: false
    default: '168h'
  cleanup-volumes:
    description: 'Clean up unused Docker volumes during cleanup'
    required: false
    default: 'false'
  cleanup-networks:
    description: 'Clean up unused Docker networks during cleanup'
    required: false
    default: 'false'
  preserve-data:
    description: 'Comma-separated list of volume names to preserve during cleanup'
    required: false

runs:
  using: 'docker'
  image: 'Dockerfile'

outputs:
  deployment_url:
    description: 'URL where the deployed application is accessible'
  version:
    description: 'Deployed version tag'
  status:
    description: 'Deployment status (success/failure)'
  logs:
    description: 'Deployment log summary'